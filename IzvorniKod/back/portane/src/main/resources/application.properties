server.port=8080

spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

springdoc.swagger-ui.path=/api/docs

jwt.access-token.expiration=${ACCESS_TOKEN_EXPIRY}
jwt.refresh-token.expiration=${REFRESH_TOKEN_EXPIRY}
jwt.signing-key=${SIGNING_KEY}

spring.liquibase.change-log=db/db.changelog-master.xml

minio.url=${MINIO_LINK}
minio.access.name=${MINIO_ACCESS}
minio.access.secret=${MINIO_SECRET}

spring.servlet.multipart.max-file-size=${MAX_FILE_SIZE}
spring.servlet.multipart.max-request-size=${MAX_REQUEST_SIZE}

weather.api_key=${OPENWEATHER_API_KEY}

google.client_id=${GOOGLE_CLIENT_ID}
google.client_secret=${GOOGLE_CLIENT_SECRET}

facebook.client_id=${FACEBOOK_CLIENT_ID}
facebook.client_secret=${FACEBOOK_CLIENT_SECRET}


# OAuth2 Client Registration for Google
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=email,profile
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.google.client-name=Google


# OAuth2 Client Registration for Facebooke
spring.security.oauth2.client.registration.facebook.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.facebook.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.facebook.scope=email,profile
spring.security.oauth2.client.registration.facebook.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.facebook.client-name=Google

base.url=${BASE_URL}
